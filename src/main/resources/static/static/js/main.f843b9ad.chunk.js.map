{"version":3,"sources":["Component/PostMapping.js","Component/GetMapping.js","Component/Nav.js","App.js","serviceWorker.js","index.js"],"names":["PostMapping","state","selectFile","name","costs","description","changeHandler","e","target","value","setState","substr","fileSelectorHandler","preventDefault","files","pathFile","handleClick","file","FormData","append","axios","post","then","res","alert","data","this","className","onSubmit","type","onChange","placeholder","to","Component","api","create","baseURL","GetMapping","person","search","updateSeach","getPeople","a","get","persons","console","log","DownloadImage","deletePeople","delete","filteringPerson","filter","toLowerCase","indexOf","map","key","id","src","filePath","alt","fileName","width","heigth","onClick","Nav","role","Home","Error","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f843b9ad.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\n\n\nclass PostMapping extends Component {\n\n\n    state = {\n        selectFile: null,\n        name: '',\n        costs: '',\n        description: ''\n    }\n\n\n    changeHandler =(e) =>{\n        if(e.target.value !== '1'){\n            this.setState({[e.target.name]: e.target.value.substr(0, 30)})\n        }\n    }\n\n    fileSelectorHandler = (e) =>{\n        e.preventDefault();\n        this.setState({\n            selectFile: e.target.files[0],\n            pathFile: ''\n        })\n\n\n    }\n    handleClick = (e) =>{\n        e.preventDefault();\n\n        const file = new FormData();\n        file.append('name', this.state.name);\n        file.append('costs', this.state.costs);\n        file.append('description', this.state.description);\n        file.append('files', this.state.selectFile);\n        axios.post(\"https://umage.herokuapp.com/file/addProduct\",\n        file\n        ).then(res =>{\n            alert(res.data);\n            this.setState({\n                selectFile: null,\n                name: '',\n                costs: '',\n                description: '',\n                selectFile: null\n            })\n        });\n    }\n\n    render(){\n\n    const {name, costs, description} = this.state;\n    return (\n        <div className=\"container mt-3\">\n                <div className=\"justify-content-center\">\n                    <form onSubmit={this.handleClick}>\n                        \n                        <div className=\"form-group form-group-lg\">\n                            <input className=\"form-control\" type=\"test\" name=\"name\" value={name} onChange={this.changeHandler} placeholder=\"Enter Product Name\" />\n                        </div>\n\n                        <div className=\"form-group form-group-sm\">\n                            <input className=\"form-control\" type=\"text\" name=\"costs\" value={costs} onChange={this.changeHandler} placeholder=\"Enter Product Cost\" />\n                        </div>\n\n                        <div className=\"form-group form-group-sm\">\n                            <input className=\"form-control col-cover-fill\" type=\"text\" name=\"description\" value={description} onChange={this.changeHandler} placeholder=\"Enter other description\" />\n                        </div>\n                        \n                        <div>\n                        <input type=\"file\" onChange={this.fileSelectorHandler}></input>\n                        </div>\n                        \n                        <div>\n                            <button  className=\"btn btn-info btn-sm btn-block\" type=\"submit\" to=\"/list\" >Submit</button>\n                            {/* <Link className=\"btn btn-info btn-sm\" type=\"submit\" to=\"/list\">Submit</Link> */}\n                        </div>\n                    </form>\n                </div>\n        </div>\n    );\n    }\n}\n\nexport default PostMapping;\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\n\nconst api = axios.create({\n    baseURL: 'https://umage.herokuapp.com/file'\n})\n\nclass GetMapping extends Component{\n\n        state = {\n            person: [],\n            search:''\n        }\n\n    componentDidMount(){\n        this.getPeople();\n    }\n    \n\n    updateSeach =(e)=>{\n        this.setState({search: e.target.value.substr(0,10)});\n    }\n\n    getPeople = async () =>{\n        api.get('/getAll')\n            .then(res => {\n                const persons = res.data;\n                console.log(persons);\n                this.setState({person: persons});\n            })\n    }\n\n    DownloadImage = async (name)=>{\n        api.get(\"/downloadImage/\"+name).then(\n            res =>{\n                console.log(res.data);\n            }\n        )\n    }\n\n    deletePeople = async (e)=>{\n        api.delete(\"/delete/\"+e).then(\n            res =>{\n                alert(res.data);\n            }\n        )\n    }\n\n    render(){\n\n        const filteringPerson = this.state.person.filter(e => {\n                    return e.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n        })\n\n        return(\n\n            <div className=\"container\">\n                <div className=\"mt-4\">\n                <input className=\"form-control\" type=\"test\" name=\"search\" value={this.state.search} onChange={this.updateSeach} placeholder=\"Searching\" />\n                <table className=\"mt-3 table table-striped text-center table-bordered table-hover table-sm\">\n                    <thead>\n                        <tr>\n                            <td>IMAGE</td>\n                            <td>NAME</td>\n                            <td>COST</td>\n                            <td>DESCRIPTION</td>\n                            <td>FUNCTIONS</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteringPerson.map(\n                                persons => {\n                                    return(\n                                <tr key={persons.id}>\n                                    <td><img src={persons.filePath} alt={persons.fileName} width=\"200px\" heigth=\"200px\"></img></td>\n                                    <td>{persons.name}</td>\n                                    <td>{persons.costs}</td>\n                                    <td>{persons.description}</td>\n                                    <td><button className=\"btn btn-outline-danger btn-sm mr-sm-2\" onClick={()=>\n                                        this.deletePeople(persons.id)}>delete</button>\n                                        <Link className=\"btn btn-outline-info btn-sm mr-sm-2\" to={\"/edit/\"+persons.id}>\n                                            Edit\n                                        </Link>\n                                        <button className=\"btn btn-outline-primary btn-sm mr-sm-2\" onClick={()=>this.DownloadImage(persons.fileName)}>Download Image</button>\n                                        </td>\n                                        \n                                </tr>\n                                    )\n                            })\n                        }\n                    </tbody>\n                </table>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default GetMapping;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\nfunction Nav() {\n\n    return(\n        <div className=\"container\">\n            <h3>\n                UR Tech\n            </h3>\n            <ul className=\"nav nav-tabs justify-content-end\" role=\"tablist\">\n\n                <li className=\"nav-item mr-sm-5\">\n                    <Link className=\"nav-link\"  to=\"/\">\n                        Home\n                    </Link >\n                </li>\n                \n                <li className=\"nav-item mr-sm-5\">\n                    <Link className=\"nav-link \"  to=\"/list\">\n                        List\n                    </Link >\n                </li>\n\n                <li className=\"nav-item mr-sm-5\">\n                    <Link className=\"nav-link\" to=\"/adding\">\n                        Adding\n                    </Link >\n                </li>\n                \n            </ul>\n        </div>\n    )\n\n}\n\nexport default Nav;\n","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport PostMapping from './Component/PostMapping';\nimport GetMapping from './Component/GetMapping';\nimport Nav from './Component/Nav';\n\n\nfunction App() {\n\n\n\n    return (\n      <>\n      <BrowserRouter>\n    <Nav />\n    <Switch>\n    <Route path=\"/\" exact component={Home}></Route>\n      <Route path=\"/list\" exact component={GetMapping} />\n      <Route path=\"/edit/:idCard\" exact component={PostMapping} />\n      <Route path=\"/adding\" exact component={PostMapping} />\n      <Route path=\"/**\" component={Error}></Route>\n    </Switch>\n    </BrowserRouter>\n      </>\n    );\n  \n}\n\nfunction Home(){\n  return(\n    <div className=\"container mt-3\">\n      <div className=\"django\">\n          <h3>Welcome to My first project</h3>\n          <p>direct by Ulugbek Qurbanov</p>\n      </div>\n    </div>\n  )\n}\n\nfunction Error(){\n  return(\n    <div className=\"container mt-3 bg-blue\">\n      <div className=\"justify-content-center\">\n          <h1 className=\"font-size-xl text-danger\">404</h1>\n          <p>Cannot Found This Page</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}